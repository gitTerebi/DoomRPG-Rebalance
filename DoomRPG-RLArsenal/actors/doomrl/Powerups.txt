actor InvulnerabilitySphere2 : CustomInventory Replaces DRPGInvulnerabilitySphere
{
	Tag "Invulnerability sphere (gives invulnerability for 30 seconds)"
	
    Inventory.PickupMessage "You picked up an invulnerability sphere."
	Inventory.PickupSound "powerups/protect"
    
    -COUNTITEM
    
    States
	{
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PINV ABCD 6 Bright
        Goto Spawn+1
	Pickup:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "PickupFail")
		TNT1 A 1 A_TakeInventory ("RLLavaSetBonusGiver")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInvulnerabilitySpherePickupGiver2")
		stop
		TNT1 A 0 A_GiveInventory ("RLInvulnerabilitySpherePickupMarineGiver2")
		stop
    PickupFail:
        TNT1 A 0
        Fail
	}
}

ACTOR RLInvulnerabilitySpherePickupGiver2 : RLInvulnerabilitySpherePickupGiver Replaces RLInvulnerabilitySpherePickupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
    Powerup.Color 255, 255, 0, 0.015
}

ACTOR RLInvulnerabilitySpherePickupMarineGiver2 : RLInvulnerabilitySpherePickupMarineGiver Replaces RLInvulnerabilitySpherePickupMarineGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
    
    Powerup.Color 255, 255, 0, 0.015
}

actor InvulnerabilityCharge2 : DRPGInvulnerabilityCharge Replaces DRPGInvulnerabilityCharge
{
	States
	{
	Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
		TNT1 A 1 A_TakeInventory ("RLLavaSetBonusGiver")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInvulnerabilityChargeNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLInvulnerabilityChargeMarine")
		stop
	} 
} 

ACTOR RLInvulnerabilityChargeNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
    Powerup.Color 255, 255, 0, 0.015
	Powerup.Type Invulnerable
	Powerup.Mode Reflective
	Powerup.Duration -30
}

ACTOR RLInvulnerabilityChargeMarine : RLInvulnerabilityChargeNormal
{
	Powerup.Duration -45
}

ACTOR BlurSphere2 : CustomInventory Replaces DRPGBlurSphere
{
	Tag "Invisibility sphere (provides partial invisibility for 60 seconds)"
	
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	+VISIBILITYPULSE
	+FLOATBOB
    -COUNTITEM

	Inventory.PickupMessage "You picked up an invisibility sphere."
	Inventory.PickupSound "powerups/invis"

	RenderStyle Translucent
	
    States
	{
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PINS ABCD 6 Bright
        Goto Spawn+1
	Pickup:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "PickupFail")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLBlurSphereNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLBlurSphereMarine")
		stop
    PickupFail:
        TNT1 A 0
        Fail
	}
}	

ACTOR RLBlurSphereNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Type Invisibility
	Powerup.Duration -60
}

ACTOR RLBlurSphereMarine : RLBlurSphereNormal
{
	Powerup.Duration -90
}

actor InvisibilityCharge2 : DRPGInvisibilityCharge Replaces DRPGInvisibilityCharge
{
	States
	{
	Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInvisibilityChargeNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLInvisibilityChargeMarine")
		stop
	}
} 

ACTOR RLInvisibilityChargeNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Type Invisibility
	Powerup.Strength 100
	Powerup.Duration -60
}

ACTOR RLInvisibilityChargeMarine : RLInvisibilityChargeNormal
{
	Powerup.Duration -90
}

actor RadSuit2 : CustomInventory Replaces DRPGRadSuit
{
	Tag "Radiation suit (protects against damaging environments for 60 seconds)"

	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	
	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You picked up a radiation suit."
	Inventory.PickupSound "powerups/suit"
	Inventory.UseSound "powerups/suit"
	Inventory.Icon "SUIT"
	
    States
	{
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        SUIT A -1 Bright
        Stop
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        stop
	Use:
        TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 3)
        TNT1 A 0 A_GiveInventory ("RLRadSuitIronPickupGiver2")
        TNT1 A 0 A_GiveInventory ("RLRadSuitPickupGiver2")
        stop
        TNT1 A 0 A_GiveInventory ("RLRadSuitIronPickupMarineGiver2")
        TNT1 A 0 A_GiveInventory ("RLRadSuitPickupMarineGiver2")
        stop	
    }
}

ACTOR RLRadSuitPickupGiver2 : RLRadSuitPickupGiver replaces RLRadSuitPickupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
    Powerup.Color 0, 255, 0, 0.015
}

ACTOR RLRadSuitPickupMarineGiver2 : RLRadSuitPickupMarineGiver replaces RLRadSuitPickupMarineGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
    
    Powerup.Color 0, 255, 0, 0.015
}

actor RLRadSuitIronPickupGiver2 : RLRadSuitIronPickupGiver replaces RLRadSuitIronPickupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
    
    Powerup.Color 0, 255, 0, 0.015
}

actor RLRadSuitIronPickupMarineGiver2 : RLRadSuitIronPickupMarineGiver replaces RLRadSuitIronPickupMarineGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
    
    Powerup.Color 0, 255, 0, 0.015
}

actor Infrared2 : CustomInventory Replaces DRPGInfrared
{
	Tag "Night vision goggles (enables night vision for 120 seconds)"
	
	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
    -COUNTITEM
	
	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You picked up night vision goggles."
	Inventory.PickupSound "powerups/light"
	Inventory.UseSound "powerups/light"	
	Inventory.Icon "PVIS"
	
	States
	{
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PVIS AB 6 Bright
        Goto Spawn+1
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInfraredPickupGiver2")
		stop
		TNT1 A 0 A_GiveInventory ("RLInfraredPickupMarineGiver2")
		stop
	}
}

ACTOR RLInfraredPickupGiver2 : RLInfraredPickupGiver replaces RLInfraredPickupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
}

ACTOR RLInfraredPickupMarineGiver2 : RLInfraredPickupMarineGiver replaces RLInfraredPickupMarineGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
}

actor Berserk2 : RLBerserk Replaces DRPGBerserk
{
	Tag "Berserk pack (heals fully plus increases melee damage until map leave)"
	
    +INVBAR
    -COUNTITEM
    -INVENTORY.ALWAYSPICKUP

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You picked up a berserk pack."
	Inventory.PickupSound "powerups/berserk"
    Inventory.UseSound "powerups/berserk"
    Inventory.Icon "PSTR"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 2)
        TNT1 A 0 ACS_NamedExecuteAlways("AddToxicity", 0, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("AMShieldCharge", 0)
        TNT1 A 0 ACS_NamedExecuteAlways("AddHealth", 0, 100, 100)
        TNT1 A 0 A_JumpIfInventory ("RLBerserkPowersuitArmorToken", 1, "Powersuit")
        TNT1 A 0 A_GiveInventory("PowerStrength")
        TNT1 A 0 A_JumpIfInventory ("RLAmmoChainPerk", 1, 2)
        TNT1 A 0 A_GiveInventory("RLBerserkPickupGiver")
        Goto Use+8
        TNT1 A 0 A_GiveInventory("RLBerserkPickupMarineGiver")
        Stop
    }
}

actor MegasphereSpotSpawner2 : RLMegasphereSpotSpawner replaces MegaSphere
{
    States
    {
    Spawn:
        TNT1 A 0 A_JumpIf(CallACS("DRPGCheckTiem"), 2)
        TNT1 A 0 A_JumpIf(CallACS("DRLA_specialstarts") == 2, "SpawnDuke2")
        TNT1 A 0 A_SpawnItemEx ("RLMegasphere", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx ("RLRandomSkullSpawner", random(-24,24),random(-24,24),0, 0,0,0, 0, SXF_NOCHECKPOSITION, 12)
        TNT1 A 0 A_SpawnItemEx ("RLMegasphereSpot", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor Megasphere2 : DRPGMegasphere
{
	States
	{
	Pickup:
		TNT1 A 0 A_GiveInventory("RLSoulSphere4")
		TNT1 A 0 ACS_NamedExecuteAlways("AddEP", 0, 1000000)
		TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, 1000000)
        TNT1 A 0 ACS_NamedExecuteAlways("AddMedkit", 0, 1000000)
		TNT1 A 0 A_JumpIfInventory ("RLIndestructibleArmorWorn", 1, "NoRepair")
		TNT1 A 0 A_JumpIfInventory ("BasicArmor", 1, 2)
		Stop
	NoRepair:
        TNT1 A 0 A_JumpIfInventory ("RLDemonicSetBonusActive", 1, "DemonicCharge")
		Stop
		TNT1 A 0 A_JumpIfInventory ("RL100ArmorWorn", 1, "100Armor")
		TNT1 A 0 A_JumpIfInventory ("RL150ArmorWorn", 1, "150Armor")
		TNT1 A 0 A_JumpIfInventory ("RL200ArmorWorn", 1, "200Armor")
		TNT1 A 0 A_JumpIfInventory ("RL100RegenArmorWorn", 1, "100Armor")
        stop
	100Armor:
		TNT1 A 0 A_GiveInventory("RLArmorBonus100Megasphere", 1)
    TNT1 A 0 A_JumpIfInventory ("RLDemonicSetBonusActive", 1, "DemonicCharge")
		Stop
	150Armor:
		TNT1 A 0 A_GiveInventory("RLArmorBonus150Megasphere", 1)
    TNT1 A 0 A_JumpIfInventory ("RLDemonicSetBonusActive", 1, "DemonicCharge")
		Stop
	200Armor:
		TNT1 A 0 A_GiveInventory("RLArmorBonus200Megasphere", 1)
    TNT1 A 0 A_JumpIfInventory ("RLDemonicSetBonusActive", 1, "DemonicCharge")
		Stop
    DemonicCharge:
        TNT1 A 0 A_GiveInventory ("RLDemonicCarapaceSupercharge", 1)
        TNT1 A 0 A_Print("Demonic Carapace supercharged!")
        TNT1 A 0
        Stop
	}
}

ACTOR RLLavaSetBonusGiver2 : RLLavaSetBonusGiver Replaces RLLavaSetBonusGiver
{
    Powerup.Color 255, 255, 0, 0.015
}

actor RLAllmap2 : RLAllmap Replaces DRPGAllMap
{
    Tag "Computer map (reveals auto map until map leave)"
    
    +INVBAR
    -COUNTITEM
    -INVENTORY.ALWAYSPICKUP

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up a computer map."
    Inventory.PickupSound "powerups/map"
    Inventory.UseSound "powerups/map" 
    Inventory.Icon "PMAP"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        Goto Super::Pickup
    }
}

actor RLTrackingMap2 : RLTrackingMap Replaces RLTrackingMap
{
    Tag "Tracking map (reveals auto map with contents until map leave)"
    
    +INVBAR
    -COUNTITEM
    -INVENTORY.ALWAYSPICKUP

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up a tracking map."
    Inventory.PickupSound "powerups/map"
    Inventory.UseSound "misc/trackingmappickup" 
    Inventory.Icon "MMAP"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        Goto Super::Pickup
    }
}
