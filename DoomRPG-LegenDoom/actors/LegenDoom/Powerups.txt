Actor DRPGInvulnerabilityPowerLD : DRPGInvulnerabilityPower
{
    Powerup.Duration -30
}

ACTOR LDInvulnerabilitySpherePickupRPG : LDInvulnerabilitySpherePickup replaces DRPGInvulnerabilitySphere
{
    Tag "Invulnerability sphere (gives invulnerability for 30 seconds)"
    
    Inventory.PickupMessage "You picked up an invulnerability sphere."
    Inventory.PickupSound "powerups/protect"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "PickupFail")
        Goto Super::Pickup
    PickupFail:
        TNT1 A 0
        Fail
    PowerupTime:
        TNT1 AA 0 A_GiveInventory("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    ShamanEffect:
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER1)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER2)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER3)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER4)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER5)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER6)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER7)
        TNT1 A 0 A_GiveInventory ("LDShamanInvulnerabilityEffectDRPG", 1, AAPTR_PLAYER8)
        Stop
    }
}

actor LDShamanInvulnerabilityEffectDRPG : LDShamanInvulnerabilityEffect replaces LDShamanInvulnerabilityEffect
{
    states
    {
    Pickup:
        TNT1 A 0 A_PlaySound("effects/shaman", 6, 1, 0, 1.5)
        TNT1 AA 0 A_GiveInventory("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGInvulnerabilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    }
}

actor LDInvulnerabilityChargeRPG : CustomInventory
{
    +INVBAR

    Tag "Invulnerability charge (grants reflective invulnerability for 30 seconds)"

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up an invulnerability charge."
    Inventory.PickupSound "powerups/protect"
    Inventory.UseSound "powerups/protect"
    Inventory.Icon "CRG2"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        CRG2 ABC 3 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
        TNT1 A 0 A_GiveInventory("LDInvulnerabilitySpherePickupRPG", 1)
        Stop
    UseFail:
        TNT1 A 0
        Fail
    } 
}

Actor DRPGInvisibilityPowerLD : DRPGInvisibilityPower
{
    Powerup.Duration -30
}

ACTOR LDBlurSpherePickupRPG : LDBlurSpherePickup replaces DRPGBlurSphere
{
    Tag "Invisibility sphere (provides partial invisibility for 60 seconds)"
    
    +VISIBILITYPULSE
    +FLOATBOB
    -COUNTITEM
    
    Inventory.PickupMessage "You picked up an invisibility sphere."
    Inventory.PickupSound "powerups/invis"
    
    RenderStyle Translucent
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "PickupFail")
        Goto Super::Pickup
    PickupFail:
        TNT1 A 0
        Fail
    PowerupTime:
        TNT1 AA 0 A_GiveInventory("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    ShamanEffect:
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER1)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER2)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER3)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER4)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER5)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER6)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER7)
        TNT1 A 0 A_GiveInventory ("LDShamanBlurSphereEffectDRPG", 1, AAPTR_PLAYER8)
        Stop
    }
}

actor LDShamanBlurSphereEffectDRPG : LDShamanBlurSphereEffect replaces LDShamanBlurSphereEffect
{
    states
    {
    Pickup:
        TNT1 A 0 A_PlaySound("effects/shaman", 6, 1, 0, 1.5)
        TNT1 AA 0 A_GiveInventory("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGInvisibilityPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    }
}

actor LDInvisibilityChargeRPG : CustomInventory
{
    +INVBAR

    Tag "Invisibility charge (bestows complete invisibility for 60 seconds)"

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up an invisibility charge."
    Inventory.PickupSound "powerups/invis"
    Inventory.UseSound "powerups/invis"
    Inventory.Icon "CRG1"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        CRG1 ABC 3 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
        TNT1 A 0 A_GiveInventory("LDBlurSpherePickupRPG", 1)
        Stop
    UseFail:
        TNT1 A 0
        Fail
    }
} 

Actor DRPGRadSuitPowerLD : DRPGRadSuitPower
{
    Powerup.Duration -30
}

ACTOR LDRadsuitPickupRPG : LDRadsuitPickup replaces DRPGRadSuit
{
    Tag "Radiation suit (protects against damaging environments for 60 seconds)"

    +INVBAR
    -COUNTITEM
    -INVENTORY.ALWAYSPICKUP

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up a radiation suit."
    Inventory.PickupSound "powerups/suit"
    Inventory.UseSound "powerups/suit"
    Inventory.Icon "SUIT"
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        Goto Super::Pickup
    PowerupTime:
        TNT1 AA 0 A_GiveInventory("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    ShamanEffect:
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER1)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER2)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER3)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER4)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER5)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER6)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER7)
        TNT1 A 0 A_GiveInventory ("LDShamanRadsuitEffectDRPG", 1, AAPTR_PLAYER8)
        Stop
    }
}

actor LDShamanRadsuitEffectDRPG : LDShamanRadsuitEffect replaces LDShamanRadsuitEffect
{
    states
    {
    Pickup:
        TNT1 A 0 A_PlaySound("effects/shaman", 6, 1, 0, 1.5)
        TNT1 AA 0 A_GiveInventory("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    }
}

Actor DRPGInfraredPowerLD : DRPGInfraredPower
{
    Powerup.Duration -60
}

ACTOR LDInfraredPickupRPG : LDInfraredPickup Replaces DRPGInfrared
{
    Tag "Night vision goggles (enables night vision for 120 seconds)"
    
    +INVBAR
    -COUNTITEM
    -INVENTORY.ALWAYSPICKUP

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up night vision goggles."
    Inventory.PickupSound "powerups/light"
    Inventory.UseSound "powerups/light" 
    Inventory.Icon "PVIS"
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        Goto Super::Pickup
    PowerupTime:
        TNT1 AA 0 A_GiveInventory("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGInfraredPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    ShamanEffect:
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER1)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER2)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER3)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER4)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER5)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER6)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER7)
        TNT1 A 0 A_GiveInventory ("LDShamanInfraredEffectDRPG", 1, AAPTR_PLAYER8)
        Stop
    }
}

actor LDShamanInfraredEffectDRPG : LDShamanInfraredEffect replaces LDShamanInfraredEffect
{
    states
    {
    Pickup:
        TNT1 A 0 A_PlaySound("effects/shaman", 6, 1, 0, 1.5)
        TNT1 AA 0 A_GiveInventory("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_Jump (256, "EffectChecking")
        Goto EffectChecking
    SustainedEffectFist:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDFistsEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChainsaw:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChainsawEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPistol:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPistolEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectSuperShotgun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDSuperShotgunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectChaingun:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDChaingunEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectRocketLauncher:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDRocketLauncherEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectPlasmaRifle:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDPlasmaRifleEffectToken", 1)
        Goto SustainedEffect
    SustainedEffectBFG9000:
        TNT1 A 0 A_GiveInventory ("DRPGRadSuitPowerLD", 1)
        TNT1 A 0 A_GiveInventory ("LDBFG9000EffectToken", 1)
        Goto SustainedEffect
    }
}

actor LDAllMapPickupRPG : LDAllMapPickup Replaces DRPGAllMap
{
    Tag "Computer map (reveals auto map until map leave)"
    
    +INVBAR
    -COUNTITEM
    -INVENTORY.ALWAYSPICKUP
    -INVENTORY.AUTOACTIVATE
    -INVENTORY.FANCYPICKUPSOUND

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up a computer map."
    Inventory.PickupSound "powerups/map"
    Inventory.UseSound "powerups/map" 
    Inventory.Icon "PMAP"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        Goto Super::Pickup
    }
}

actor LDBerserkPickupRPG : LDBerserkPickup Replaces DRPGBerserk
{
    Tag "Berserk pack (heals fully plus increases melee damage until map leave)"
    
    +INVBAR
    -INVENTORY.AUTOACTIVATE
    -INVENTORY.ALWAYSPICKUP
    
    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You picked up a berserk pack."
    Inventory.PickupSound "powerups/berserk"
    Inventory.UseSound "powerups/berserk"
    Inventory.Icon "PSTR"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 2)
        TNT1 A 0 ACS_NamedExecuteAlways("AddToxicity", 0, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("AMShieldCharge", 0)
        TNT1 A 0 ACS_NamedExecuteAlways("AddHealth", 0, 100, 100)
        Goto Super::Pickup
    }
}

ACTOR LDMegaspherePickupRPG : LDMegaspherePickup Replaces DRPGMegasphere
{
    RenderStyle Add
    
    Inventory.PickupMessage "You picked up a mega sphere."
    Inventory.PickupSound "powerups/megasphere"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        Goto Super::Spawn
    Pickup:
        TNT1 A 0 A_GiveInventory("LDSoulsphereRPG3")
        TNT1 A 0 ACS_NamedExecuteAlways("AddEP", 0, 1000000)
        TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, 1000000)
        TNT1 A 0 ACS_NamedExecuteAlways("AddMedkit", 0, 1000000)
    }
}
